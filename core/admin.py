"""
This module is used to change the default admin user interface generated by Django.
"""

from core.models import DeviceInterface, Method, ScheduleAction, \
    ActionPreconditionMethod, ActionDevice, StateValue, Schedule, MethodParameter, \
    StateValueArgument, Device, Interface, Trigger, Action, ActionParameter
from django.contrib import admin
from django.contrib.auth.admin import UserAdmin
from django.contrib.auth.models import User
from registration.models import UserProfile


class DeviceInterfaceInline(admin.TabularInline):
    model = DeviceInterface
    extra = 3


class MethodInline(admin.TabularInline):
    model = Method
    exclude = ['return_data_type']
    extra = 3


class ScheduleActionInline(admin.TabularInline):
    model = ScheduleAction
    extra = 3


class ActionPreconditionMethodInline(admin.TabularInline):
    model = ActionPreconditionMethod
    ordering = ['expression_position']
    readonly_fields = ['expression_position', 'action_device', 'method']
    extra = 0


class ActionDeviceInline(admin.TabularInline):
    model = ActionDevice
    ordering = ['parameter_position']
    readonly_fields = ['name', 'parameter_position']
    extra = 0


class ActionParameterInline(admin.TabularInline):
    model = ActionParameter
    ordering = ['parameter_position']
    readonly_fields = ['name', 'parameter_position']
    extra = 0


class StateValueInline(admin.TabularInline):
    model = StateValue
    fields = ['method', 'value']
    extra = 3


class ScheduleInline(admin.TabularInline):
    model = Schedule
    fields = ['name']
    extra = 0


class MethodParameterInline(admin.TabularInline):
    model = MethodParameter
    exclude = ['data_type']
    extra = 0


class StateValueArgumentInline(admin.TabularInline):
    model = StateValueArgument
    fields = ['method_parameter', 'value']
    extra = 0


class UserProfileInline (admin.StackedInline):
    model = UserProfile
    max_num = 1
    can_delete = False


class InterfaceAdmin(admin.ModelAdmin):
    exclude = ['interface_file']
    readonly_fields = ['interface_file_url']
    inlines = [MethodInline]

    def interface_file_url(self, obj):
        return '<a href="%s">%s</a>' % (obj.interface_file.url,
                                        obj.interface_file.name)
    interface_file_url.allow_tags = True
    interface_file_url.short_description = 'Interface file'


class DeviceAdmin(admin.ModelAdmin):
    readonly_fields = ['proximity_device_list', 'id_string']
    inlines = [DeviceInterfaceInline, StateValueInline]
    list_display = ['mac_address', 'name', 'num_proximity_devices']

    def proximity_device_list(self, obj):
        mac_addresses = []
        for device in obj.proximity_device_group.order_by('mac_address'):
            mac_addresses.append(device.mac_address)
        return '<br/>'.join(mac_addresses)
    proximity_device_list.allow_tags = True


class ScheduleAdmin(admin.ModelAdmin):
    exclude = ['schedule_file', 'configuration_model_file']
    readonly_fields = ['schedule_file_url', 'configuration_model_file_url']
    inlines = [ScheduleActionInline]

    def schedule_file_url(self, obj):
        return '<a href="%s">%s</a>' % (obj.schedule_file.url,
                                        obj.schedule_file.name)
    schedule_file_url.allow_tags = True
    schedule_file_url.short_description = 'Schedule file'

    def configuration_model_file_url(self, obj):
        return '<a href="%s">%s</a>' % (obj.configuration_model_file.url,
                                        obj.configuration_model_file.name)
    configuration_model_file_url.allow_tags = True
    configuration_model_file_url.short_description = 'Configuration model file'


class ActionAdmin(admin.ModelAdmin):
    exclude = ['action_file']
    readonly_fields = ['precondition_expression', 'action_file_url']
    inlines = [ActionDeviceInline, ActionParameterInline,
               ActionPreconditionMethodInline]

    def action_file_url(self, obj):
        return '<a href="%s">%s</a>' % (obj.action_file.url,
                                        obj.action_file.name)
    action_file_url.allow_tags = True
    action_file_url.short_description = 'Action file'


class StateValueAdmin(admin.ModelAdmin):
    fields = ['device', 'method', 'value']
    inlines = [StateValueArgumentInline]


class TriggerAdmin(admin.ModelAdmin):
    inlines = [ScheduleInline]


class MethodAdmin(admin.ModelAdmin):
    exclude = ['return_data_type']
    inlines = [MethodParameterInline]


class UserModelAdmin(admin.ModelAdmin):
    inlines = UserAdmin.inlines + [UserProfileInline]

# unregister old user admin
admin.site.unregister(User)
# register new user admin
admin.site.register(User, UserModelAdmin)

admin.site.register(Device, DeviceAdmin)
admin.site.register(Interface, InterfaceAdmin)
admin.site.register(StateValue, StateValueAdmin)
admin.site.register(Trigger, TriggerAdmin)
admin.site.register(Schedule, ScheduleAdmin)
admin.site.register(Action, ActionAdmin)
admin.site.register(Method, MethodAdmin)
